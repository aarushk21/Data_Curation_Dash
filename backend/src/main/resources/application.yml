spring:
  application:
    name: data-pipeline-manager
  
  profiles:
    active: development
  
  datasource:
    url: jdbc:postgresql://localhost:5432/pipeline_db
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false

server:
  port: 8080
  servlet:
    context-path: /api
  
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${spring.profiles.active}

logging:
  level:
    com.datapipeline: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log

# AWS Configuration
aws:
  region: us-east-1
  s3:
    bucket-name: data-pipeline-storage
  rds:
    endpoint: localhost:5432
  ecs:
    cluster-name: data-pipeline-cluster

# Application specific configuration
app:
  pipeline:
    max-retries: 3
    timeout-seconds: 3600
    default-schedule: "0 0 * * * *"  # Every hour
  monitoring:
    enabled: true
    metrics-interval: 30
  security:
    jwt:
      secret: your-secret-key-here
      expiration: 86400000  # 24 hours

---
spring:
  config:
    activate:
      on-profile: development
  
  datasource:
    url: jdbc:postgresql://localhost:5432/pipeline_db
    username: postgres
    password: password
  
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: create-drop

logging:
  level:
    com.datapipeline: DEBUG
    org.springframework.web: DEBUG

---
spring:
  config:
    activate:
      on-profile: production
  
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: validate

logging:
  level:
    com.datapipeline: INFO
    org.springframework.web: WARN

aws:
  region: ${AWS_REGION}
  s3:
    bucket-name: ${S3_BUCKET_NAME}
  rds:
    endpoint: ${RDS_ENDPOINT}
  ecs:
    cluster-name: ${ECS_CLUSTER_NAME}

app:
  security:
    jwt:
      secret: ${JWT_SECRET} 